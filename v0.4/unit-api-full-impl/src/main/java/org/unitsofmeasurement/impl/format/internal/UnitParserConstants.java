/**
 *  Unit-API - Units of Measurement API for Java
 *  Copyright 2013-2014, Jean-Marie Dautelle, Werner Keil, V2COM and individual
 *  contributors by the @author tag.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/* Generated By:JavaCC: Do not edit this line. UnitParserConstants.java */
package org.unitsofmeasurement.impl.format.internal;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface UnitParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DIGIT = 1;
  /** RegularExpression Id. */
  int SUPERSCRIPT_DIGIT = 2;
  /** RegularExpression Id. */
  int INITIAL_CHAR = 3;
  /** RegularExpression Id. */
  int EXTENDED_CHAR = 4;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MINUS = 6;
  /** RegularExpression Id. */
  int ASTERISK = 7;
  /** RegularExpression Id. */
  int MIDDLE_DOT = 8;
  /** RegularExpression Id. */
  int SOLIDUS = 9;
  /** RegularExpression Id. */
  int CARET = 10;
  /** RegularExpression Id. */
  int COLON = 11;
  /** RegularExpression Id. */
  int OPEN_PAREN = 12;
  /** RegularExpression Id. */
  int CLOSE_PAREN = 13;
  /** RegularExpression Id. */
  int INTEGER = 14;
  /** RegularExpression Id. */
  int SUPERSCRIPT_INTEGER = 15;
  /** RegularExpression Id. */
  int FLOATING_POINT = 16;
  /** RegularExpression Id. */
  int LOG = 17;
  /** RegularExpression Id. */
  int NAT_LOG = 18;
  /** RegularExpression Id. */
  int E = 19;
  /** RegularExpression Id. */
  int UNIT_IDENTIFIER = 20;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<DIGIT>",
    "<SUPERSCRIPT_DIGIT>",
    "<INITIAL_CHAR>",
    "<EXTENDED_CHAR>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"\\u00b7\"",
    "\"/\"",
    "\"^\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "<INTEGER>",
    "<SUPERSCRIPT_INTEGER>",
    "<FLOATING_POINT>",
    "<LOG>",
    "<NAT_LOG>",
    "\"e\"",
    "<UNIT_IDENTIFIER>",
  };

}
